# Generated by Django 5.0.4 on 2024-05-04 18:26

import components.mixins
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('components', '0002_alter_antennatype_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration', models.CharField(help_text='Series/Parallels e.g. 6S3P', max_length=6, verbose_name='Configuration Type')),
                ('size', models.CharField(help_text='Size of individual battery (e.g. 18650)', max_length=5, validators=[django.core.validators.MinLengthValidator(5)])),
                ('type', models.CharField(choices=[('LIPO', 'LiPo'), ('LI_ION', 'Li-Ion'), ('LIHV', 'LiHV'), ('ANOTHER', 'Another')], default='LIPO', max_length=10)),
                ('connector_type', models.CharField(help_text='Power Connector Type (e.g. XT60)', max_length=50, verbose_name='Power Connector')),
                ('balancer', models.CharField(help_text='Charge Balancer, e.g. JST XH-7 pin', max_length=50, verbose_name='Charge Balancer')),
                ('capacity', models.IntegerField(help_text='Battery Capacity, mAh', verbose_name='Battery Capacity, mAh')),
                ('voltage', models.FloatField(help_text='Rated Voltage', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(28)], verbose_name='Rated Voltage, V')),
                ('discharge_current', models.IntegerField(help_text='Max. discharge current, A', verbose_name='Max. discharge current')),
                ('charge_current', models.IntegerField(help_text='Max. charge current, A', verbose_name='Max. charge current')),
                ('weight', models.FloatField(help_text='Weight oh the camera in grams')),
                ('length', models.FloatField(help_text='Length of the battery, mm')),
                ('height', models.FloatField(help_text='Height of the battery, mm')),
                ('thickness', models.FloatField(help_text='Thickness of the battery, mm')),
                ('user', models.ForeignKey(blank=True, help_text='Public if empty', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Battery',
                'verbose_name_plural': 'Batteries',
                'db_table': 'components_battery',
                'ordering': ('size', 'configuration', 'capacity'),
            },
            bases=(models.Model, components.mixins.UniqueConstraintMixin),
        ),
    ]
