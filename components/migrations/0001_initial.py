# Generated by Django 5.0.4 on 2024-05-01 13:13

import components.mixins
import components.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(help_text='Full name of the item', max_length=50)),
                ('tvl', models.IntegerField(default=1200, help_text='TVL, or TV Lines - Resolution', validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(1800)], verbose_name='TVL')),
                ('voltage_min', models.FloatField(help_text='Voltage Range - Minimal Voltage', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(28)], verbose_name='Minimal Voltage')),
                ('voltage_max', models.FloatField(help_text='Voltage Range - Maximal Voltage', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(28)], verbose_name='Maximal Voltage')),
                ('ratio', models.CharField(choices=[('4:3', '4:3'), ('16:9', '16:9'), ('switch', 'Switchable')], default='switch', help_text='Aspect Ratio', max_length=10, verbose_name='Aspect Ratio')),
                ('fov', models.IntegerField(help_text='FOV Horizontally', validators=[components.validators.validate_integer_length], verbose_name='FOV')),
                ('output_type', models.CharField(choices=[('A', 'Analog'), ('D', 'Digital')], default='A', max_length=10, verbose_name='Output Type')),
                ('light_sens', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low (0.01 and higher)'), ('normal', 'Normal'), ('high', 'High (0.00001 and below)')], default='unknown', help_text='Higher light sensitivity = Better night vision', max_length=10, verbose_name='Light Sensitivity')),
                ('height', models.FloatField(help_text='Height of the camera in mm', max_length=5, verbose_name='Camera mount size height')),
                ('width', models.FloatField(help_text='Width of the camera in mm', max_length=5, verbose_name='Camera mount size width')),
                ('height_bracket', models.FloatField(blank=True, help_text='Height of the camera in mm with bracket', max_length=5, null=True, verbose_name='Camera height with bracket')),
                ('width_bracket', models.FloatField(blank=True, help_text='Width of the camera in mm with bracket', max_length=5, null=True, verbose_name='Camera width with bracket')),
                ('weight', models.FloatField(blank=True, help_text='Weight oh the camera in grams', null=True)),
                ('user', models.ForeignKey(blank=True, help_text='Public if empty', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Camera',
                'verbose_name_plural': 'Cameras',
                'ordering': ['manufacturer', 'model'],
            },
            bases=(models.Model, components.mixins.UniqueConstraintMixin),
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(help_text='Full name of the item', max_length=50)),
                ('prop_size', models.CharField(help_text='Propeller size in inches', max_length=50, verbose_name='Propeller size')),
                ('size', models.CharField(help_text='Size(Diagonal) of the frame in mm', max_length=50, verbose_name='Frame size')),
                ('weight', models.FloatField(blank=True, help_text='Weight oh the frame in grams', null=True)),
                ('material', models.CharField(blank=True, choices=[('aluminum', 'Aluminium'), ('fibre', 'Carbon fibre')], max_length=50, null=True)),
                ('configuration', models.CharField(blank=True, choices=[('h', 'H Frame'), ('x', 'X Frame'), ('hybrid', 'Hybrid-X'), ('box', 'Box')], max_length=50, null=True)),
                ('user', models.ForeignKey(blank=True, help_text='Public if empty', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Frame',
                'verbose_name_plural': 'Frames',
                'ordering': ['manufacturer', 'model'],
            },
            bases=(models.Model, components.mixins.UniqueConstraintMixin),
        ),
        migrations.CreateModel(
            name='FrameDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camera_mount_height', models.FloatField(help_text='Height of the camera in mm', max_length=5, verbose_name='Camera mount size height')),
                ('camera_mount_width', models.FloatField(help_text='Width of the camera in mm', max_length=5, verbose_name='Camera mount size width')),
                ('motor_mount_height', models.FloatField(help_text='Height of the motor in mm', max_length=5, verbose_name='Motor mount size height')),
                ('motor_mount_width', models.FloatField(help_text='Width of the motor in mm', max_length=5, verbose_name='Motor mount size width')),
                ('vtx_mount_height', models.FloatField(help_text='Height of the vtx in mm', max_length=5, verbose_name='VTX mount size height')),
                ('vtx_mount_width', models.FloatField(help_text='Width of the vtx in mm', max_length=5, verbose_name='VTX mount size width')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='components.frame')),
            ],
            options={
                'verbose_name': 'FrameDetail',
                'verbose_name_plural': 'FrameDetails',
                'ordering': ('frame__manufacturer', 'frame__model'),
            },
        ),
        migrations.CreateModel(
            name='Propeller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(help_text='Full name of the item', max_length=50)),
                ('size', models.FloatField(help_text='Size of the propeller in inches', validators=[django.core.validators.MinValueValidator(2)])),
                ('pitch', models.FloatField(help_text='Pitch of the propeller in inches')),
                ('blade_count', models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('another', 'Another')], max_length=10)),
                ('weight', models.FloatField(blank=True, help_text='Weight of propeller in grams', null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Propeller',
                'verbose_name_plural': 'Propellers',
                'ordering': ['model'],
            },
            bases=(models.Model, components.mixins.UniqueConstraintMixin),
        ),
    ]
