# Generated by Django 5.1.5 on 2025-02-20 19:19

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import suggestions.mixins
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('components', '0004_alter_receiverdetail_options_and_more'),
        ('suggestions', '0004_propellersuggestion'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExistingReceiverDetailSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frequency', models.FloatField(help_text='Frequency, in Mhz', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Frequency')),
                ('weight', models.FloatField(help_text='Weight in grams, without Antenna', validators=[django.core.validators.MinValueValidator(0)])),
                ('telemetry_power', models.FloatField(help_text='Telemetry Power, In dBm', validators=[django.core.validators.MinValueValidator(0)])),
                ('rf_chip', models.CharField(blank=True, help_text='RF Chip Number', max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='components.receiver', verbose_name='Receiver')),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='components.receiverdetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Existing Receiver Detail Suggestion',
                'verbose_name_plural': 'Existing Receiver Detail Suggestions',
                'db_table': 'suggestions_existing_receiver_detail',
                'ordering': ['receiver'],
            },
        ),
        migrations.CreateModel(
            name='ReceiverProtocolTypeSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(help_text='Rx To FC', max_length=50, verbose_name='Output Protocol Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.receiverprotocoltype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Receiver Protocol Type Suggestion',
                'verbose_name_plural': 'Receiver Protocol Type Suggestions',
                'db_table': 'suggestions_receiver_protocol_type',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='ReceiverSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(help_text='Full name of the item', max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Long description of the item', verbose_name='Text')),
                ('processor', models.CharField(blank=True, help_text='Name of the processor(MCU)', max_length=100, null=True)),
                ('voltage_min', models.FloatField(help_text='Voltage Range - Minimal Voltage', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(28)], verbose_name='Minimal Voltage')),
                ('voltage_max', models.FloatField(blank=True, help_text='Voltage Range - Maximal Voltage, optional', null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(28)], verbose_name='Maximal Voltage')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('antenna_connectors', models.ManyToManyField(to='components.antennaconnector')),
                ('protocols', models.ManyToManyField(help_text='Rx To FC', to='components.receiverprotocoltype', verbose_name='Output Protocol')),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.receiver')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Receiver Suggestion',
                'verbose_name_plural': 'Receiver Suggestions',
                'db_table': 'suggestions_receiver',
                'ordering': ['manufacturer', 'model'],
            },
            bases=(suggestions.mixins.MediaHandlerMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SuggestedReceiverDetailSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frequency', models.FloatField(help_text='Frequency, in Mhz', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Frequency')),
                ('weight', models.FloatField(help_text='Weight in grams, without Antenna', validators=[django.core.validators.MinValueValidator(0)])),
                ('telemetry_power', models.FloatField(help_text='Telemetry Power, In dBm', validators=[django.core.validators.MinValueValidator(0)])),
                ('rf_chip', models.CharField(blank=True, help_text='RF Chip Number', max_length=50, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.receiverdetail', verbose_name='submitted_suggestions')),
                ('suggestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='suggestions.receiversuggestion', verbose_name='details')),
            ],
            options={
                'verbose_name': 'Suggested Receiver Detail',
                'verbose_name_plural': 'Suggested Receiver Details',
                'db_table': 'suggestions_suggested_receiver_detail',
                'ordering': ['related_instance'],
            },
        ),
    ]
