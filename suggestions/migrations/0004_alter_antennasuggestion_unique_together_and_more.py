# Generated by Django 5.1.3 on 2025-01-16 22:02

import components.validators
import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('components', '0001_initial'),
        ('suggestions', '0003_alter_existingantennadetailsuggestion_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='antennasuggestion',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='existingantennadetailsuggestion',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='suggestedantennadetailsuggestion',
            unique_together=set(),
        ),
        migrations.CreateModel(
            name='CameraSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(help_text='Full name of the item', max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Long description of the item', verbose_name='Text')),
                ('tvl', models.IntegerField(default=1200, help_text='TVL, or TV Lines - Resolution', validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(3000)], verbose_name='TVL')),
                ('voltage_min', models.FloatField(help_text='Voltage Range - Minimal Voltage', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(28)], verbose_name='Minimal Voltage')),
                ('voltage_max', models.FloatField(help_text='Voltage Range - Maximal Voltage', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(28)], verbose_name='Maximal Voltage')),
                ('ratio', models.CharField(choices=[('4:3', '4:3'), ('16:9', '16:9'), ('another', 'Another'), ('switch', 'Switchable')], default='switch', help_text='Aspect Ratio', max_length=10, verbose_name='Aspect Ratio')),
                ('fov', models.IntegerField(help_text='FOV Horizontally', validators=[components.validators.validate_fov_length], verbose_name='FOV')),
                ('output_type', models.CharField(choices=[('A', 'Analog'), ('D', 'Digital')], default='A', max_length=10, verbose_name='Output Type')),
                ('light_sens', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low (0.01 and higher)'), ('normal', 'Normal'), ('high', 'High (0.00001 and below)')], default='unknown', help_text='Higher light sensitivity = Better night vision', max_length=10, verbose_name='Light Sensitivity')),
                ('weight', models.FloatField(blank=True, help_text='Weight oh the camera in grams', null=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.camera')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video_formats', models.ManyToManyField(to='components.videoformat')),
            ],
            options={
                'verbose_name': 'Camera Suggestion',
                'verbose_name_plural': 'Camera Suggestions',
                'db_table': 'suggestions_camera',
                'ordering': ['manufacturer', 'model'],
            },
        ),
        migrations.CreateModel(
            name='ExistingCameraDetailSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('height', models.FloatField(help_text='Height of the camera in mm', max_length=5, verbose_name='Camera mount size height')),
                ('width', models.FloatField(help_text='Width of the camera in mm', max_length=5, verbose_name='Camera mount size width')),
                ('reviewed', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('camera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='components.camera', verbose_name='Camera')),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='components.cameradetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Existing Camera Detail Suggestion',
                'verbose_name_plural': 'Existing Camera Detail Suggestions',
                'db_table': 'suggestions_existing_camera_detail',
                'ordering': ['camera'],
            },
        ),
        migrations.CreateModel(
            name='SuggestedCameraDetailSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('height', models.FloatField(help_text='Height of the camera in mm', max_length=5, verbose_name='Camera mount size height')),
                ('width', models.FloatField(help_text='Width of the camera in mm', max_length=5, verbose_name='Camera mount size width')),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.cameradetail', verbose_name='submitted_suggestions')),
                ('suggestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='suggestions.camerasuggestion', verbose_name='details')),
            ],
            options={
                'verbose_name': 'Suggested Camera Detail',
                'verbose_name_plural': 'Suggested Camera Details',
                'db_table': 'suggestions_suggested_camera_detail',
                'ordering': ['related_instance'],
            },
        ),
        migrations.CreateModel(
            name='VideoFormatSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('format', models.CharField(help_text='Format of the video (e.g. NTSC/PAL)', max_length=50, unique=True, verbose_name='Video Format')),
                ('reviewed', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.videoformat')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Video Format Suggestion',
                'verbose_name_plural': 'Video Format Suggestions',
                'db_table': 'suggestions_video_format',
                'ordering': ['format'],
            },
        ),
    ]
