# Generated by Django 5.1.5 on 2025-02-22 09:57

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import suggestions.mixins
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('components', '0007_alter_outputpower_options_alter_transmitter_options_and_more'),
        ('suggestions', '0008_flightcontrollerfirmwaresuggestion_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OutputPowerSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('output_power', models.PositiveIntegerField(unique=True, verbose_name='Output Power')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.outputpower')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Output Power Suggestion',
                'verbose_name_plural': 'Output Power Suggestions',
                'db_table': 'suggestions_output_power',
                'ordering': ['output_power'],
            },
        ),
        migrations.CreateModel(
            name='TransmitterSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(help_text='Full name of the item', max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Long description of the item', verbose_name='Text')),
                ('input_voltage_min', models.FloatField(help_text='Operating Voltage Range - Min. Input Voltage', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Min. Input Voltage')),
                ('input_voltage_max', models.FloatField(help_text='Operating Voltage Range - Max. Input Voltage', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Max. Input Voltage')),
                ('output_voltage', models.FloatField(help_text='Output Voltage', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Output Voltage')),
                ('channels_quantity', models.IntegerField(help_text='Channels Quantity', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Channels Quantity')),
                ('output', models.CharField(choices=[('A', 'Analog'), ('D', 'Digital')], default='A', help_text='Output Type', max_length=10, verbose_name='Output Type')),
                ('max_power', models.PositiveIntegerField(help_text='Max. VTX Power', verbose_name='Max. VTX Power')),
                ('microphone', models.BooleanField(default=True, help_text='Has Microphone?', verbose_name='Built-in Microphone?')),
                ('length', models.FloatField(help_text='Length of the item, mm')),
                ('height', models.FloatField(help_text='Height of the item, mm')),
                ('thickness', models.FloatField(help_text='Thickness of the item, mm')),
                ('weight', models.FloatField(blank=True, help_text='Weight oh the transmitter in grams', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('antenna_connectors', models.ManyToManyField(to='components.antennaconnector')),
                ('output_powers', models.ManyToManyField(to='components.outputpower', verbose_name='Output Powers')),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.transmitter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video_formats', models.ManyToManyField(to='components.videoformat')),
            ],
            options={
                'verbose_name': 'Transmitter Suggestion',
                'verbose_name_plural': 'Transmitter Suggestions',
                'db_table': 'suggestions_transmitter',
                'ordering': ['manufacturer', 'model'],
            },
            bases=(suggestions.mixins.MediaHandlerMixin, models.Model),
        ),
    ]
