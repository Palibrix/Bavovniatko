# Generated by Django 5.1.3 on 2024-12-28 20:18

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('components', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AntennaConnectorSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(help_text='Type of antenna connector', max_length=50, unique=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.antennaconnector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Antenna Connector Suggestion',
                'verbose_name_plural': 'Antenna Connector Suggestions',
                'db_table': 'suggestions_antenna_connector',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='AntennaSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manufacturer', models.CharField(max_length=50)),
                ('model', models.CharField(help_text='Full name of the item', max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Long description of the item', verbose_name='Text')),
                ('center_frequency', models.FloatField(help_text='Center frequency of the antenna')),
                ('bandwidth_min', models.FloatField(help_text='Min. bandwidth (frequency) of the antenna')),
                ('bandwidth_max', models.FloatField(help_text='Max. bandwidth (frequency) of the antenna')),
                ('swr', models.FloatField(blank=True, help_text='SWR of the antenna at Center Frequency (lower=better)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='SWR (VSWR)')),
                ('gain', models.FloatField(blank=True, help_text='Gain of the antenna, in dBi', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('radiation', models.IntegerField(blank=True, help_text='Radiation efficiency of the antenna, in %', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('reviewed', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.antenna')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='components.antennatype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Antenna Suggestion',
                'verbose_name_plural': 'Antenna Suggestions',
                'db_table': 'suggestions_antenna',
                'ordering': ['manufacturer', 'model'],
                'unique_together': {('manufacturer', 'model')},
            },
        ),
        migrations.CreateModel(
            name='AntennaTypeSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(help_text='Type of the antenna, e.g. Monopole, Dipole etc.', max_length=50, unique=True)),
                ('direction', models.CharField(choices=[('directional', 'Directional'), ('omni', 'Omni-directional')], default='directional', help_text='Omni-directional: all directions, Directional: one direction.', max_length=50)),
                ('polarization', models.CharField(choices=[('linear', 'Linear, LP'), ('left_circular', 'Left-hand Circular, LHCP'), ('right_circular', 'Right-hand Circular, RHCP')], default='linear', max_length=50)),
                ('reviewed', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.antennatype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Antenna Type Suggestion',
                'verbose_name_plural': 'Antenna Type Suggestions',
                'db_table': 'suggestions_antenna_type',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='ExistingAntennaDetailSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('weight', models.FloatField(help_text='Weight of the antenna in grams')),
                ('angle_type', models.CharField(choices=[('angled', 'Angled'), ('straight', 'Straight')], default='straight', help_text='Angled or Straight', max_length=50)),
                ('reviewed', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('admin_comment', models.TextField(blank=True, null=True)),
                ('request_description', models.TextField(blank=True, null=True)),
                ('antenna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='components.antenna', verbose_name='Antenna')),
                ('connector_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='components.antennaconnector')),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='components.antennadetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Existing Antenna Detail Suggestion',
                'verbose_name_plural': 'Existing Antenna Detail Suggestions',
                'db_table': 'suggestions_existing_antenna_detail',
                'ordering': ['related_instance', 'connector_type'],
                'unique_together': {('related_instance', 'connector_type', 'angle_type')},
            },
        ),
        migrations.CreateModel(
            name='SuggestedAntennaDetailSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('weight', models.FloatField(help_text='Weight of the antenna in grams')),
                ('angle_type', models.CharField(choices=[('angled', 'Angled'), ('straight', 'Straight')], default='straight', help_text='Angled or Straight', max_length=50)),
                ('antenna', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_details', to='suggestions.antennasuggestion', verbose_name='details')),
                ('connector_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='components.antennaconnector')),
                ('related_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submitted_suggestions', to='components.antennadetail', verbose_name='submitted_suggestions')),
            ],
            options={
                'verbose_name': 'Suggested Antenna Detail',
                'verbose_name_plural': 'Suggested Antenna Details',
                'db_table': 'suggestions_suggested_antenna_detail',
                'ordering': ['related_instance', 'connector_type'],
                'unique_together': {('related_instance', 'connector_type', 'angle_type')},
            },
        ),
    ]
